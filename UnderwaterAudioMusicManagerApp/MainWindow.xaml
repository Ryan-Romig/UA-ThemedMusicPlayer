<Window x:Name="mainWindow" x:Class="UnderwaterAudioMusicManagerApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UnderwaterAudioMusicManagerApp"
        mc:Ignorable="d"
        Title="Music Manager"  Height="769" Width="1152" ResizeMode="CanResize" Icon="/logo.png" SizeChanged="mainWindow_SizeChanged" Background="{x:Null}" SizeToContent="Manual" WindowStyle="SingleBorderWindow">
    <Window.Resources>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#009BD8" Opacity="0.5" />
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="FocusVisual4">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <SolidColorBrush x:Key="Button.Static.Background3" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border3" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="#009BD8"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border4" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background3" Color="#00CFCC"/>
        <SolidColorBrush x:Key="Button.Pressed.Border3" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background3" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border3" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground3" Color="#FF838383"/>


        <Style x:Key="iconButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual4}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border4}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border3}"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border3}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground3}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>





        <Style x:Key="FocusVisual5">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background4" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border4" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background4" Color="#009BD8"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border5" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background4" Color="#f8971d">
            <SolidColorBrush.RelativeTransform>
                <TransformGroup>
                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="5" ScaleY="5"/>
                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                    <RotateTransform CenterY="0.5" CenterX="0.5"/>
                    <TranslateTransform/>
                </TransformGroup>
            </SolidColorBrush.RelativeTransform>
        </SolidColorBrush>
        <SolidColorBrush x:Key="Button.Pressed.Border4" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background4" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border4" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground4" Color="#FF838383"/>

        <Style x:Key="customPlayButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual5}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background4}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border4}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Width" Value="64px"/>
            <Setter Property="Height" Value="64px"/>
            <Setter Property="Margin" Value="10,0,10,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background4}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border5}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background4}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border4}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background4}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border4}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground4}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>







        <Style x:Key="FocusVisual6">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background5" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border5" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background5" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border6" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background5" Color="Green"/>
        <SolidColorBrush x:Key="Button.Pressed.Border5" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background5" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border5" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground5" Color="#FF838383"/>

        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual6}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background5}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border5}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Margin" Value="10,0,10,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="Green"/>
                                <Setter Property="Margin" Value="10,0,10,0"/>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background5}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border6}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background5}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border5}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background5}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border5}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground5}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Green"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="Green"/>
                </Trigger>
            </Style.Triggers>
        </Style>







        <Style x:Key="FocusVisual7">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background6" Color="Green"/>
        <SolidColorBrush x:Key="Button.Static.Border6" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background6" Color="green"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border7" Color="Green"/>
        <SolidColorBrush x:Key="Button.Pressed.Background6" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border6" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background6" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border6" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground6" Color="#FF838383"/>
        <Style x:Key="shuffleToggleOnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual7}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background6}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border6}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Width" Value="64px"/>
            <Setter Property="Height" Value="64px"/>
            <Setter Property="Margin" Value="10,0,10,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background6}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border7}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background6}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border6}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background6}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border6}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground6}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!--Navigation Button Stying-->
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="navButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Margin" Value="5,0,5,0"/>
            <Setter Property="Height" Value="30px"/>
            <Setter Property="Width" Value="100px"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <!-- setting the top clickaple part of the window to move the window around -->
    <!--<WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="40"/>
    </WindowChrome.WindowChrome>-->


    <!-- main container  -->
    <!--Main Window Grid this holds 2 rows the title bar and everything below it-->
    <Border CornerRadius="0,0,0,0" >
        <Border.Background>
            <ImageBrush ImageSource="/background.jpeg"/>
        </Border.Background>


        <Grid>
            <!--<Grid.Background>
            <ImageBrush ImageSource="/background.jpeg" Stretch="UniformToFill"/>
        </Grid.Background>-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!--TitleBar-->

            <Grid x:Name="titleBarGrid" Height="40px" Grid.Row="0">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="32"/>
                    <ColumnDefinition Width="36*"/>
                    <ColumnDefinition Width="181*"/>
                    <ColumnDefinition Width="35"/>
                </Grid.ColumnDefinitions>

                <!--TitleBar Content-->


                <Border Grid.Column="1" x:Name="titleLabelBar" Background="#009BD8" CornerRadius="0,0,0,0" Margin="0,0,1,0" MouseLeftButtonDown="titleLabelBar_MouseLeftButtonDown"   >
                    <Label HorizontalAlignment="Center" FontSize="24px" FontWeight="Light" FontStretch="Expanded" x:Name="tabTitleLabel" Background="{x:Null}" Content="Library"/>
                </Border>






                <Border Visibility="Collapsed" WindowChrome.IsHitTestVisibleInChrome="True"  x:Name="closeButtonBackground" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="0,0,0,0"  BorderBrush="Transparent" MouseEnter="closeButtonBackground_MouseEnter" MouseLeave="closeButtonBackground_MouseLeave" MouseDown="closeButtonBackground_MouseDown_1" MouseLeftButtonUp="closeButtonBackground_MouseLeftButtonUp">
                    <Button WindowChrome.IsHitTestVisibleInChrome="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="14px" Width="14px" x:Name="closeButton"  Click="closeButton_Click" Foreground="Black" Background="#FF00141F" Margin="0,3,0,3" MouseLeftButtonDown="closeButton_MouseLeftButtonDown">
                        <Button.OpacityMask>
                            <ImageBrush ImageSource="/icons8-delete-24.png"/>
                        </Button.OpacityMask>

                    </Button>
                </Border>








            </Grid>


            <!--Body  this is all the content below the title bar-->
            <Grid x:Name="appContentGrid" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="41*"/>
                    <RowDefinition Height="553*"/>
                    <RowDefinition Height="135"/>
                    <!--bottom control bar height-->
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>




                <Button Style="{DynamicResource navButtonStyle}" Grid.Column="1" HorizontalAlignment="Left"  Click="Button_Click"  Content="Back"  />

                <StackPanel  Grid.Column="1" x:Name="navigationPanel" Orientation="Horizontal" HorizontalAlignment="Center"  VerticalAlignment="Top" Grid.Row="0"  >
                    <Button Style="{DynamicResource navButtonStyle}"   Click="Button_Click_1"  Content="Playlist" Visibility="Collapsed" />
                    <Button Style="{DynamicResource navButtonStyle}"  x:Name="delphinNavTab"  Click="delphinNavTab_Click" Content="Delphin"/>

                    <Button Style="{DynamicResource navButtonStyle}"   Click="addToPlaylistButton_Click" Content="Add to Playlist" />
                    <Button Style="{DynamicResource navButtonStyle}"  x:Name="importButton" Click="importButton_Click" Content="Add Media"/>
                    <Button Style="{DynamicResource navButtonStyle}"  x:Name="deleteButton" Content="Delete" Click="deleteButton_Click"/>


                </StackPanel>


                <Grid Grid.Column="1" Grid.Row="1" x:Name="mainContentGrid"  >

                    <Grid Visibility="Collapsed" Grid.Column="1" x:Name="delphinPage">
                        <Image x:Name="delphinFrameImage" Grid.Column="0" Source="/DelphinFrame.png" StretchDirection="Both" Stretch="Uniform" Visibility="Visible"/>
                    </Grid>


                    <Grid x:Name="libraryPage">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="881*"/>
                            <ColumnDefinition Width="191*"/>
                        </Grid.ColumnDefinitions>
                        <DataGrid AutoGenerateColumns="True" CanUserSortColumns="True"  IsReadOnly="True"  x:Name="libraryListView" MouseDoubleClick="libraryListView_MouseDoubleClick" Loaded="libraryListView_Loaded" Background="{x:Null}" BorderBrush="{x:Null}" Visibility="Collapsed" Margin="0,0,690,0"  >

                        </DataGrid>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" >
                            <ScrollViewer.Effect>
                                <DropShadowEffect/>
                            </ScrollViewer.Effect>
                            <WrapPanel x:Name="playlistView" Loaded="playlistView_Loaded"/>
                        </ScrollViewer>

                        <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto">
                            <StackPanel  Grid.Column="1" x:Name="playlistPanel">

                            </StackPanel>
                        </ScrollViewer>






                    </Grid>


                    <Grid Visibility="Collapsed" x:Name="playlistPage">
                        <ScrollViewer VerticalScrollBarVisibility="Auto" >
                            <ScrollViewer.Effect>
                                <DropShadowEffect/>
                            </ScrollViewer.Effect>
                            <WrapPanel x:Name="playlistListView" Loaded="playlistListView_Loaded" />
                        </ScrollViewer>


                    </Grid>


                </Grid>







                <!--Controls-->
                <Grid x:Name="bottomControlBar" Margin="0,1,0,0" Grid.Row="2" Grid.ColumnSpan="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="465*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="463*"/>

                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="64*"/>
                        <RowDefinition Height="61*"/>
                    </Grid.RowDefinitions>

                    <Grid.Background>
                        <ImageBrush ImageSource="/bluebackground.jpg" Stretch="UniformToFill"/>
                    </Grid.Background>


                    <DockPanel x:Name="volumeControlPanel" Grid.Column="2">
                        <Button HorizontalAlignment="Right"  x:Name="volumeButton" RenderTransformOrigin="0.5,0.5"/>

                        <Slider  MouseMove="Slider_OnMouseMove" IsMoveToPointEnabled="True" MaxWidth="125px" VerticalAlignment="Center" x:Name="volumeSlider"
                            Margin="0,0,0,0"
                            Background="{x:Null}"
                            DockPanel.Dock="Left"
                            IsSnapToTickEnabled="False"
                            LargeChange="5"
                            Maximum="65"
                            Orientation="Horizontal"
                            SmallChange="1"
                            Value="100" BorderBrush="{x:Null}" Foreground="#FF00B7FF" ValueChanged="volumeSlider_Change" AutoToolTipPlacement="None" Cursor="SizeWE" Opacity="0.8" >
                            <Slider.Effect>
                                <DropShadowEffect/>
                            </Slider.Effect>
                        </Slider>
                    </DockPanel>



                    <Grid x:Name="playerControlPanel" Grid.Row="0" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto" MinWidth="322.58"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <StackPanel  Grid.Column="1" x:Name="playerControlButtonStackPanel"   VerticalAlignment="Center" HorizontalAlignment="Center" Height="Auto" Width="auto" Orientation="Horizontal" >
                            <!--repeat button-->
                            <Button Style="{DynamicResource customPlayButtonStyle}" x:Name="repeatButton" Height="24" Width="24" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="repeatButton_Click">
                                <Button.Effect>
                                    <DropShadowEffect/>
                                </Button.Effect>
                                <Button.OpacityMask>
                                    <ImageBrush ImageSource="/icons8-restart-48.png" Stretch="Uniform"/>
                                </Button.OpacityMask>
                            </Button>
                            <Button Visibility="Collapsed" Style="{DynamicResource shuffleToggleOnStyle}" x:Name="repeatButtonOn" Height="24" Width="24" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="repeatButton_Click" Background="#FF0CFF00">
                                <Button.Effect>
                                    <DropShadowEffect/>
                                </Button.Effect>
                                <Button.OpacityMask>
                                    <ImageBrush ImageSource="/icons8-restart-48.png" Stretch="Uniform"/>
                                </Button.OpacityMask>
                            </Button>


                            <!--rewind button-->
                            <Button Style="{DynamicResource customPlayButtonStyle}" x:Name="rewindButton" Click="rewindButton_Click"  Width="32px" Foreground="{x:Null}" BorderBrush="{x:Null}" >
                                <Button.Effect>
                                    <DropShadowEffect/>
                                </Button.Effect>
                                <Button.OpacityMask>
                                    <ImageBrush Stretch="Uniform" ImageSource="/icons8-skip-to-start-64 - Copy.png"/>
                                </Button.OpacityMask>
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Button.RenderTransform>
                            </Button>
                            <!--play button button-->

                            <Button Click="playButton_Click" x:Name="playButton"
                                  Style="{DynamicResource customPlayButtonStyle}"
                                  ToolTip="MaterialDesignIconButton">
                                <Button.Effect>
                                    <DropShadowEffect/>
                                </Button.Effect>
                                <Button.OpacityMask>
                                    <ImageBrush ImageSource="/icons8-play-64.png"/>
                                </Button.OpacityMask>


                            </Button>
                            <!--<Button   Style="{DynamicResource customPlayButtonStyle}" x:Name="playButton" BorderThickness="0" Width="56" BorderBrush="{x:Null}" Click="playButton_Click" Foreground="{x:Null}" VerticalAlignment="Stretch" Visibility="Visible" Background="#FFDDDDDD" >
                                <Button.Effect>
                                    <DropShadowEffect/>
                                </Button.Effect>
                                <Button.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform X="0"/>
                                    </TransformGroup>
                                </Button.RenderTransform>
                                <Button.OpacityMask>
                                    <ImageBrush ImageSource="/play-button.png" Stretch="Uniform"/>
                                </Button.OpacityMask>
                                <materialDesign:PackIcon Kind="PlayCircleOutline" />
                            </Button>-->
                            <!--pause button-->

                            <Button Style="{DynamicResource customPlayButtonStyle}" x:Name="pauseButton"  Width="56"  Click="pauseButton_Click" Visibility="Collapsed" >
                                <Button.OpacityMask>
                                    <ImageBrush ImageSource="/icons8-pause-64.png"/>
                                </Button.OpacityMask>
                            </Button>
                            <!--forward button-->

                            <Button  Style="{DynamicResource customPlayButtonStyle}"   x:Name="forwardButton" Width="32px" Click="forwardButton_Click" BorderBrush="{x:Null}" Foreground="{x:Null}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Button.Effect>
                                    <DropShadowEffect/>
                                </Button.Effect>
                                <Button.OpacityMask>
                                    <ImageBrush ImageSource="/skip-end.png" Stretch="Uniform"/>
                                </Button.OpacityMask>
                            </Button>
                            <!--back button-->
                            <Button  Style="{DynamicResource customPlayButtonStyle}" x:Name="shuffleButton" Width="24px" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="shuffleButton_Click" >
                                <Button.Effect>
                                    <DropShadowEffect/>
                                </Button.Effect>
                                <Button.OpacityMask>
                                    <ImageBrush ImageSource="/icons8-shuffle-64.png" Stretch="Uniform"/>
                                </Button.OpacityMask>
                            </Button>
                            <!--shuffle button-->
                            <Button Style="{DynamicResource shuffleToggleOnStyle}"  x:Name="shuffleButtonOn" Width="24px" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="shuffleButton_Click" Visibility="Collapsed" Background="#FF0CFF00" >
                                <Button.Effect>
                                    <DropShadowEffect/>
                                </Button.Effect>
                                <Button.OpacityMask>
                                    <ImageBrush ImageSource="/icons8-shuffle-64.png" Stretch="Uniform"/>
                                </Button.OpacityMask>
                            </Button>

                        </StackPanel>


                    </Grid>


                    <!--Center Button Controls-->



                    <!--END CENTER CONTROLS-->

                    <!-- Start Volume Controls-->
                    <Grid x:Name="trackControlPanel" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="81*"/>
                            <ColumnDefinition Width="639*"/>
                            <ColumnDefinition Width="80*"/>
                        </Grid.ColumnDefinitions>
                        <Label x:Name="nowPlayingLabel" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top"></Label>
                        <Grid Grid.Column="1" x:Name="progressSliderGroup">
                            <ProgressBar Height="4px" x:Name="trackProgressBar" >
                                <ProgressBar.Effect>
                                    <BlurEffect/>
                                </ProgressBar.Effect>
                            </ProgressBar>
                            <Slider  MouseMove="Slider_OnMouseMove" IsMoveToPointEnabled="True"  Height="22px" Maximum="100"  x:Name="trackProgressSlider" VerticalAlignment="Center" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" ValueChanged="trackProgressSlider_Change" Opacity="0" AutoToolTipPlacement="None" SmallChange="0.2" Cursor="ScrollWE" Grid.ColumnSpan="3" TickFrequency="0.1" LargeChange="5" />
                            <Label x:Name="trackDurationLabel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="2" Height="26" Width="32" Content="0:00"/>
                            <Label HorizontalAlignment="Left" VerticalAlignment="Bottom" x:Name="timeElapsedLabel" Height="26" Width="32" Content="0:00"/>
                        </Grid>
                    </Grid>









                </Grid>
                <!--<StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <TabControl Margin="10,10,10,10" HorizontalAlignment="Center" Grid.Column="1" VerticalAlignment="Center">
                        <TabItem  Width="100" Padding="10,0,10,0" HorizontalContentAlignment="Center"  Header="Library" PreviewMouseLeftButtonDown="TabItem_PreviewMouseLeftButtonDown">
                            <Grid Background="Transparent"/>
                        </TabItem>

                    </TabControl>
                    <TabControl Margin="10,10,10,10" HorizontalAlignment="Center" Grid.Column="1" VerticalAlignment="Center">
                        <TabItem  Width="100" Header="Delphin" PreviewMouseLeftButtonDown="TabItem_PreviewMouseLeftButtonDown_1">
                            <Grid Background="Transparent"/>
                        </TabItem>
                    </TabControl>
                </StackPanel>-->

            </Grid>






        </Grid>
    </Border>

</Window>
